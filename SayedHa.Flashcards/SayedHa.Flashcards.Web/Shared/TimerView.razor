@using System.Timers
@using System.Diagnostics

<ul class="timer">
    <li>Time: <span class="timer-value">@GetElapsedTime()</span></li>
    <li>Best: wip</li>
</ul>

@code {
    // the stopwatch has to be managed (start/stop/etc.) by the parent
    [Parameter]
    public Stopwatch Stopwatch{ get; set; }
    private Timer refreshTimer = new Timer(250);
    private int counter = 0;
    private readonly int maxCounter = 60;
    protected override void OnInitialized() {
        refreshTimer.Elapsed += RefreshTimer;
        refreshTimer.Enabled = true;
    }

    public void RefreshTimer(Object source, System.Timers.ElapsedEventArgs e) {
        Console.WriteLine("RefreshTimer");
        InvokeAsync(StateHasChanged);
    }

    protected string GetElapsedTime() =>
        Stopwatch != null ?
        $"{Stopwatch.Elapsed.TotalSeconds}" :
        "";

    protected string GetElapsedTime2() {
        if(Stopwatch != null) {
            return $"{Stopwatch.Elapsed.TotalSeconds}";
        }
        else {
            return "00:00:00";
        }
    }
}
