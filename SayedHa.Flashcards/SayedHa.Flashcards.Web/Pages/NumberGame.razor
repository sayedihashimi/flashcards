@* 
This file is part of SayedHa.Flashcards.

SayedHa.Flashcards is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

SayedHa.Flashcards is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with SayedHa.Flashcards.  If not, see <https://www.gnu.org/licenses/>.
*@
@inject NavigationManager uriHelper
@inject IJSRuntime JsRuntime
@page "/numbers"
@using System.Diagnostics
<audio id="audio-restart-game" preload="auto">
    <source src="media/xp-restart.mp3">
</audio>
<nav>
    <span class="empty"></span>
    <span id="mainMenu">
        <ul>
            <li>
                <fast-anchor role="button" @onclick="GoHome" class="nav-link" Match="NavLinkMatch.All">
                    <a role="button">🏠</a>
                </fast-anchor>
            </li>
            <li>
                <fast-anchor role="button" @onclick="RefershPage" class="nav-link" Match="NavLinkMatch.All">
                    <img src="media/refersh.svg" alt="refresh" @onclick="RefershPage" />
                </fast-anchor>
            </li>
        </ul>
    </span>
    <span class="empty"></span>
</nav>
<main>
    <NumberTableGameView @ref="numberGameView" NumItems="25" Stopwatch="stopwatch" />

    <TimerView Stopwatch="stopwatch" />
</main>


@code {
    private Stopwatch? stopwatch = new Stopwatch();
    private NumberTableGameView? numberGameView;

    private void RefershPage() {
        // uriHelper.NavigateTo("/numbers", KnownValues.ForceLoad);
        JsRuntime.InvokeAsync<string>("PlayAudio", $"audio-restart-game");
        numberGameView!.Reset();
    }

    private void GoHome() {
        uriHelper.NavigateTo("/", forceLoad: KnownValues.ForceLoad);
    }
}
